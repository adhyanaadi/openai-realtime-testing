# Local Docker Development Environment Variables for the Backend Service
# Rename this to .env.local (or a name referenced in docker-compose.yml)

# --- Database Configuration ---
# For local development with Docker Compose, you might connect to:
# 1. A cloud-hosted Supabase instance (recommended for ease).
# 2. A local Supabase instance running via its own Docker setup (more complex, see Supabase docs).
# 3. A standard PostgreSQL container (if not using Supabase-specific features heavily during dev).

# Option 1: Connect to your cloud Supabase instance (most common for dev)
# Replace with your actual Supabase project's connection string.
SUPABASE_DATABASE_URL="postgresql://postgres:your-supabase-password@db.your-project-ref.supabase.co:6543/postgres"

# Option 2: Example if Supabase was running locally via Docker on default port 5432
# This assumes the backend service can reach the Supabase stack on 'host.docker.internal' (from Docker Desktop)
# or a specific service name if part of the same docker-compose network.
# SUPABASE_DATABASE_URL="postgresql://postgres:your-local-supabase-password@host.docker.internal:5432/postgres"
# Or if 'supabase_db' was a service name in docker-compose:
# SUPABASE_DATABASE_URL="postgresql://postgres:your-local-supabase-password@supabase_db:5432/postgres"


# --- OpenAI Configuration ---
# Your API key for OpenAI services.
# It's recommended to use a development-specific key if possible.
OPENAI_API_KEY="sk-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"


# --- Tool Credentials (Example) ---
# API key for the mock weather tool.
MOCK_WEATHER_TOOL_API_KEY="test_weather_key"


# --- Logging Configuration ---
# Optional: Set the log level for the application (DEBUG, INFO, WARNING, ERROR, CRITICAL).
# Defaults to INFO if not set in the application.
LOG_LEVEL="DEBUG" # Often useful for local development


# --- Mock A2A Server URL (if needed by backend to know its own mock's URL, usually not) ---
# Generally, the A2A service discovers other agents. If the backend needs to point to the
# mock A2A server for some reason (e.g., if an agent definition card in the backend
# explicitly needs to point to the mock server by its Docker service name), you might add:
# MOCK_A2A_SERVER_BASE_URL="http://mock_a2a_server:8001"
# However, MOCK_AGENT_CARDS in a2a_communication_service.py already has http://localhost:8001,
# which works when all services are mapped to localhost ports. If running purely container-to-container,
# then service names would be used.
```

# Environment variables for the Backend Service

# -- Database Configuration (Supabase PostgreSQL) --
# Connection string for your Supabase PostgreSQL database.
# You can find this in your Supabase project dashboard: Project Settings -> Database -> Connection string (URI tab).
# It uses a connection pooler for Supabase.
# Format: postgresql://postgres:[YOUR-PASSWORD]@[AWS-REGION].pooler.supabase.com:6543/postgres
# Replace [YOUR-PASSWORD] and [AWS-REGION] with your specific Supabase credentials.
# Example: SUPABASE_DATABASE_URL="postgresql://postgres:MySupabaseDBPassword@db.abcdefghijklmnop.us-east-1.supabase.com:6543/postgres"
# For older Supabase projects or direct connection (not recommended for serverless environments):
# SUPABASE_DATABASE_URL="postgresql://postgres:MySupabaseDBPassword@aws-region.supabase.com:5432/postgres" 
SUPABASE_DATABASE_URL="postgresql://postgres:your-supabase-password@aws-region.pooler.supabase.com:6543/postgres"

# -- OpenAI Configuration --
# Your API key for OpenAI services.
OPENAI_API_KEY="sk-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"

# -- Service Security --
# The API key clients must provide in the X-API-KEY header to access the service.
# Choose a strong, unique key for your deployment.
EXPECTED_API_KEY="your-secret-api-key-for-the-service"

# -- Optional: Agent Behavior --
# You can add environment variables to configure default agent behaviors if needed.
# For example, to set a default agent persona:
# DEFAULT_AGENT_PERSONA_NAME="greeter"

# -- Optional: Uvicorn/FastAPI settings (usually passed as CLI args but can be here for reference) --
# HOST="0.0.0.0"
# PORT="8000"
# WORKERS="4" # Number of Uvicorn workers

# Note: 
# - Ensure this file is named `.env` in the root of the `backend/` directory when running the service.
# - Do not commit your actual .env file with sensitive credentials to version control. Add `.env` to your .gitignore file.
# - For testing, you might use a separate `.env.test` file or environment variables set directly in your test environment.
# - The application code (e.g., main.py, security.py) uses `python-dotenv` to load these variables.

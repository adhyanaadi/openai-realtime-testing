# Environment variables for the Backend Service

# -- Database Configuration (Supabase PostgreSQL) --
# Format: postgresql://postgres:[YOUR-PASSWORD]@[AWS-REGION].pooler.supabase.com:6543/postgres
SUPABASE_DATABASE_URL="postgresql://postgres:your-supabase-password@aws-region.pooler.supabase.com:6543/postgres"

# -- OpenAI Configuration --
OPENAI_API_KEY="sk-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"

# -- Service Security Note --
# Client authentication is handled by an upstream Supabase Edge Function (`auth-gateway`).
# Refer to `backend/docs/supabase_edge_functions.md` for details.

# -- Tool Credentials (Example) --
MOCK_WEATHER_TOOL_API_KEY="test_weather_key" 

# -- Logging Configuration --
# LOG_LEVEL="INFO" # Optional: DEBUG, INFO, WARNING, ERROR, CRITICAL. Defaults to INFO.

# -- OpenTelemetry Configuration --
# Endpoint for the OTLP collector (e.g., Jaeger, Grafana Tempo, OpenTelemetry Collector).
# For HTTP exporter, typically ends with /v1/traces.
OTEL_EXPORTER_OTLP_ENDPOINT="http://localhost:4318/v1/traces"
# Service name to identify this backend in traces.
OTEL_SERVICE_NAME="ai_assistant_backend"
# Optional: Set to "true" to print traces to console (for debugging, very verbose)
# OTEL_EXPORTER_OTLP_TRACES_EXPORTER="console" 

# -- Optional: Agent Behavior --
# DEFAULT_AGENT_PERSONA_NAME="greeter"

# -- Optional: Uvicorn/FastAPI settings --
# HOST="0.0.0.0"
# PORT="8000"
# WORKERS="4"

# Note: 
# - Rename this file to .env and fill in your actual values.
# - Add .env to your .gitignore file.
# - For testing, consider a separate .env.test file.
